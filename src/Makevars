CSOURCES+=$(shell find ACTIONet/src -type f -name "*.c")
SOURCES+=$(shell find ACTIONet/src -type f -name "*.cc")
SOURCES2+=$(shell find . -type f -name "*.cpp")
OBJECTS=$(SOURCES:.cc=.o) $(SOURCES2:.cpp=.o) $(CSOURCES:.c=.o)

PWD=$(shell pwd)
INCLUDE_BASE=$(PWD)/ACTIONet/include/base
INCLUDE_COMMON=$(shell find $(PWD)/ACTIONet/include/common -type d -print | sed s/^/-I/)
INCLUDE_R=$(PWD)/ACTIONet/include/R
INCLUDE_PATHS=-I$(INCLUDE_BASE) -I$(INCLUDE_COMMON) -I$(INCLUDE_R)

PKG_CPPFLAGS=$(INCLUDE_PATHS) -I../inst/include -w -m64 -DINT_64BITS -DARMA_64BIT_WORD -O3 -march=native -mtune=native -w -m64 -fno-strict-aliasing -fomit-frame-pointer -funroll-loops -fexpensive-optimizations
PKG_CXXFLAGS=$(INCLUDE_PATHS) -I../inst/include -w -m64 -DINT_64BITS -DARMA_64BIT_WORD -O3 -march=native -mtune=native -w -std=c++14 -m64 -fno-strict-aliasing -fomit-frame-pointer -funroll-loops -fexpensive-optimizations

UNAME=$(shell uname -s)
ifeq ($(UNAME),Linux)
    $(info Using Linux configurations)
    NPROC=${shell nproc}
		ifdef $(ONEAPI_ROOT)
			$(info Found OneAPI)
			PKG_CPPFLAGS+=-I/usr/include/suitesparse
			PKG_LIBS=-Wl,--start-group $(ONEAPI_ROOT)/lib/intel64 -Wl,--end-group -liomp5 -lpthread -lm -ldl
		else ifdef $(MKLROOT)
			$(info Found MKL)
			PKG_CPPFLAGS+=-I$(MKLROOT)/include -I/usr/include/suitesparse
			PKG_LIBS=-Wl,--start-group $(MKLROOT)/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a ${MKLROOT}/lib/intel64/libmkl_core.a -Wl,--end-group -liomp5 -lpthread -lm -ldl
		else
        PKG_CPPFLAGS+=-I/usr/include/suitesparse
        PKG_LIBS=$(BLAS_LIBS) $(LAPACK_LIBS) $(FLIBS)
    endif
else ifeq ($(UNAME),Darwin)
    $(info Using Mac OS configurations)
    NPROC=$(shell sysctl -n hw.logicalcpu)
    PKG_CPPFLAGS+=-I/usr/local/opt/suite-sparse/include -DACCELERATE
    PKG_LIBS=-L/usr/local/opt/suite-sparse/lib -framework accelerate
# else ifeq ($(UNAME),CYGWIN*|MINGW32*|MSYS*|MINGW*)
#     $(info Using Windows configurations)
#     NPROC=${NUMBER_OF_PROCESSORS}
#     ifeq ($(MKLROOT),)
#         $(warning Can not find MKL)
#         PKG_LIBS=$(BLAS_LIBS) $(LAPACK_LIBS)
#     else
#         $(info Found MKL)
#         PKG_CPPFLAGS+=-I"%MKLROOT%"\include
#         PKG_LIBS=mkl_intel_lp64.lib mkl_tbb_thread.lib mkl_core.lib tbb.lib
#     endif
else
    $(error Unsupported OS $(UNAME))
endif
PKG_LIBS+=-lcholmod
MAKEFLAGS+="-j $(NPROC)"
