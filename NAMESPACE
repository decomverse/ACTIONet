# Generated by roxygen2: do not edit by hand

S3method(plot,ACTIONet)
S3method(plot,ACTIONet.3D)
S3method(plot,ACTIONet.TF.view)
S3method(plot,ACTIONet.backbone)
S3method(plot,ACTIONet.backbone.graph)
S3method(plot,ACTIONet.feature.view)
S3method(plot,ACTIONet.gene.view)
S3method(plot,ACTIONet.gradient)
S3method(plot,ACTIONet.interactive)
S3method(plot,ACTIONetExperiment)
S3method(plot,backbone.graph)
S3method(plot,individual.gene)
S3method(plot,top.k.features)
S3method(select,top.k.features)
export(HDBSCAN.clustering)
export(Leiden.clustering)
export(annotate.archetypes.using.labels)
export(annotate.archetypes.using.markers)
export(annotate.cells.from.archetypes.using.markers)
export(annotate.cells.using.markers)
export(annotate.cells.using.markers.updated)
export(annotate.clusters.using.labels)
export(annotate.clusters.using.markers)
export(annotate.profile.using.markers)
export(assess.TF.activities.from.archetypes)
export(assess.TF.activities.from.scores)
export(assess.geneset.enrichment.from.archetypes)
export(assess.geneset.enrichment.from.scores)
export(assess.geneset.enrichment.gProfiler)
export(assess.genesets)
export(assess.peakset.enrichment.from.archetypes)
export(batch.correct.ace.Harmony)
export(cluster.graph)
export(compute.cluster.feature.specificity)
export(correct.cell.annotations)
export(decomp)
export(geneset.enrichment.gProfiler)
export(get.top.marker.genes)
export(impute.genes.using.ACTIONet)
export(impute.genes.using.archetypes)
export(impute.specific.genes.using.archetypes)
export(infer.missing.cell.annotations)
export(map.cell.scores.from.archetype.enrichment)
export(normalize.Linnorm)
export(normalize.ace)
export(normalize.default)
export(normalize.multiBatchNorm)
export(normalize.scran)
export(orthoProject)
export(orthogonalize.ace.batch)
export(orthogonalize.ace.batch.simple)
export(reconstruct.ACTIONet)
export(reduce.ace)
export(reduce.and.batch.correct.ace.Harmony)
export(reduce.and.batch.correct.ace.fastMNN)
export(reduce.and.batch.orthogonalize.ace)
export(reduce.perturbed.ace)
export(rerun.archetype.aggregation)
export(rerun.layout)
export(run.ACTIONet)
exportPattern("^[[:alpha:]]+")
import(Rcpp)
import(ggplot2)
import(plotly, except = 'last_plot')
useDynLib(ACTIONet, .registration=TRUE)
